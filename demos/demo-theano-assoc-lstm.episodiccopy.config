#!returnn.py
# kate: syntax python;

import os
demo_name, _ = os.path.splitext(__file__)
print("Hello, experiment: %s" % demo_name)

task = "train"
train = {"class": "TaskEpisodicCopyDataset", "num_seqs": 1000}
dev = {"class": "TaskEpisodicCopyDataset", "num_seqs": 100, "fixed_random_seed": 1}

num_inputs = 10
num_outputs = 10
batching = "random"
batch_size = 5000
max_seqs = 10
chunking = "200:200"

network = {
"fw0": {"class": "associative_lstm", "n_out": 128, "n_copies": 4},
"output": {"class": "softmax", "loss": "ce", "from": ["fw0"]}
}

# training
# Note that it takes about 15 epochs until it starts getting it.
adam = True
learning_rate = 0.01
model = "/tmp/returnn.%s.network" % demo_name
num_epochs = 100
save_interval = 20
gradient_clip = 0

# log
log_verbosity = 3
